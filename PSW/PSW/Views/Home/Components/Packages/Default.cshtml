@model PackagesViewModel
@using PSW.Models
@using PSW.Controllers

@{
    var hasQueryString = Context.Request.Query.Count > 0;
}

@using (Html.BeginForm("Index", "Home"))
{
    <div id="submit-wrapper" class="p-3 w-100 border-top">
        <button class="btn btn-success float-end ms-2" id="generate" name="generate"><i class="ion-checkmark-circled"></i> Update Script</button>
        <button class="btn btn-danger float-end ms-2" id="clearpackages"><i class="ion-android-delete"></i> Clear All Packages</button>
        <a href="/" class="btn btn-primary float-end ms-2" id="startover"><i class="ion-ios-undo"></i> Start Over</a>
    </div>
    <div class="heading text-center py-3 mb-5">
        <h2 class="text-uppercase">Umbraco Package Script Writer</h2>
        <p>Tick the box under the packages you want to install and configure the options to generate the required script to run.</p>
        <input type="hidden" asp-for="@Model.Packages" />
    </div>
    <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item pr-1" role="presentation">
            <a class="nav-link @(hasQueryString ? null : "active")" id="packages-tab" data-bs-toggle="tab" href="#packagestabcontent" role="tab" aria-controls="packagestabcontent" aria-selected="true"><i class="ion-search"></i> Packages (@(Model.AllPackages?.Count ?? 0))</a>
        </li>
        <li class="nav-item pr-1" id="code-nav-item" role="presentation">
            <a class="nav-link @(hasQueryString ? "active" : null)" id="code-tab" data-bs-toggle="tab" href="#code" role="tab" aria-controls="home" aria-selected="true"><i class="ion-code"></i> Install Script</a>
        </li>
        <li class="nav-item pr-1" role="presentation">
            <a class="nav-link" id="options-tab" data-bs-toggle="tab" href="#options" role="tab" aria-controls="options" aria-selected="false"><i class="ion-settings"></i> Options</a>
        </li>
        <li class="nav-item pr-1" role="presentation">
            <a class="nav-link" id="help-tab" data-bs-toggle="tab" href="#help" role="tab" aria-controls="help" aria-selected="false"><i class="ion-help"></i> Help</a>
        </li>
        <li class="nav-item pr-1" role="presentation">
            <a class="nav-link" id="source-tab" data-bs-toggle="tab" href="#source" role="tab" aria-controls="source" aria-selected="false"><i class="ion-social-github"></i> Source Code</a>
        </li>
        <li class="nav-item pr-1" role="presentation">
            <a class="nav-link" id="coffee-tab" data-bs-toggle="tab" href="#coffee" role="tab" aria-controls="coffee" aria-selected="false"><i class="ion-coffee"></i> Buy me a coffee</a>
        </li>
    </ul>
    <div class="tab-content">
        <div class="tab-pane fade show @(hasQueryString ? null : "active")" id="packagestabcontent" role="tabpanel" aria-labelledby="packages-tab">
            @if (Model.AllPackages != null && Model.AllPackages.Any())
            {
                List<string> pickedPackageIds = new List<string>();
                List<PackageWithVersion> pickedPackages = new List<PackageWithVersion>();
                var packages = Model.Packages.Split(',', StringSplitOptions.RemoveEmptyEntries);
                if (packages != null && packages.Any())
                {
                    foreach (var package in packages)
                    {
                        var packageParts = package.Split('|');
                        var pwv = new PackageWithVersion()
                        {
                            PackageId = packageParts[0]
                        };
                        if (packageParts.Length > 1)
                        {
                            pwv.PackageVersion = packageParts[1];
                        }
                        pickedPackages.Add(pwv);
                    }
                    pickedPackageIds = pickedPackages.Select(x => x.PackageId).ToList();
                }

                var selectedPackages = Model.Packages?.Split(',', StringSplitOptions.RemoveEmptyEntries)?.ToList() ?? new List<string>();
                int packageId = 0;
                <div class="row m-4">
                    <div class="col-12">
                        <div class="form-group">
                            <input type="text" id="search" class="form-control" placeholder="Search for packages...">
                        </div>
                    </div>
                </div>
                <div class="row mt-4" id="packagelist">
                    @foreach (var package in Model.AllPackages.OrderByDescending(x => x.Downloads))
                    {
                        var downloads = package?.Downloads ?? 0;
                        var isChecked = pickedPackageIds != null && pickedPackageIds.Contains(package.NuGetPackageId);

                        <div class="col-md-4 packageItem p-2" data-packageid="@package.NuGetPackageId @package.Name @package?.OwnerInfo?.Owner @package?.Category">
                            <div class="card p-3 @(isChecked ? "selected" : null) text-center" style="min-height: 100%;">
                                <img src="@(package?.Image ?? "")?width=100&height=100&mode=pad&bgcolor=fff" alt="@(package?.Name ?? "uknown")" />
                                <div class="card-body">
                                    <h3 class="card-title"><a href="@(package?.Url ?? "#")" target="_blank" rel="noopener">@(package?.Name ?? "unknown")</a></h3>
                                    <p class="card-text">@(package?.Summary ?? "")</p>
                                    <p>
                                        <small>By: <strong>@(package?.OwnerInfo?.Owner ?? "unknown")</strong></small><br/>
                                        <small>Downloads: <strong>@string.Format("{0:n0}", downloads)</strong></small>
                                    </p>
                                    
                                </div>
                                <div class="checkbox-outer form-group mb-3">
                                    <label for="package_@packageId" class="w-25 float-start">Add</label>
                                    <input type="checkbox" class="float-start mt-1" name="package" id="package_@packageId" value="@(package?.NuGetPackageId ?? "")" checked="@(isChecked ? "checked" : null)" />
                                </div>
                                <div class="dropdown-outer form-group">
                                    <label asp-for="@package.SelectedVersion" class="w-25 float-start mt-1"></label>
                                    @if(package.PackageVersions != null && package.PackageVersions.Any())
                                    {
                                        var packageWithVersion = pickedPackages.FirstOrDefault(x => x.PackageId == package.NuGetPackageId);

                                        <select class="form-control w-75 float-start" id="PackageVersion_@packageId" name="PackageVersion_@packageId">
                                            <option selected="@(package.SelectedVersion == "" ? "selected" : null)" value="">Latest Stable</option>
                                            <option selected="@(package.SelectedVersion == "--prerelease" ? "selected" : null)" value="--prerelease">Pre-release</option>
                                            @foreach(var version in package.PackageVersions)
                                            {
                                                <option selected="@(package.SelectedVersion == version ? "selected" : null)" value="@version">@version</option>
                                            }
                                        </select>
                                    }
                                    else
                                    {
                                        <select class="form-control w-75 float-start" id="PackageVersion_@packageId" name="PackageVersion_@packageId" disabled="disabled">
                                            <option selected="@(package.SelectedVersion == "" ? "selected" : null)" value="">Latest Stable</option>
                                            <option selected="@(package.SelectedVersion == "--prerelease" ? "selected" : null)" value="--prerelease">Pre-release</option>
                                        </select>
                                    }
                                </div>
                            </div>
                        </div>
                        packageId++;
                    }
                </div>
            }
        </div>
        <div class="tab-pane fade show  @(hasQueryString ? "active" : null)" id="code" role="tabpanel" aria-labelledby="code-tab">
            <pre class="prettyprint ps">@Model.Output</pre>
            <div class="row">
                <div class="col-12 text-right">
                    <button id="copy" class="btn btn-success"><i class="ion-ios-copy"></i> Copy Script</button>
                </div>
            </div>
        </div>
        <div class="tab-pane fade show " id="options" role="tabpanel" aria-labelledby="options-tab">
            <div class="container clearfix mt-4 bg-light p-3">
                <div class="row">
                    <div class="col-6">
                        <div class="form-group pt-2">
                            <div class="form-check">
                                <label asp-for="@Model.InstallUmbracoTemplate" class="form-check-label"></label>
                                <input asp-for="@Model.InstallUmbracoTemplate" class="form-check-input" type="checkbox" />
                            </div>
                        </div>
                        <div class="form-group py-2">
                            <label asp-for="@Model.UmbracoTemplateVersion"></label>
                            @if(Model.UmbracoVersions != null && Model.UmbracoVersions.Any())
                            {
                                <select class="form-control" id="UmbracoTemplateVersion" name="UmbracoTemplateVersion" disabled="@(Model.InstallUmbracoTemplate ? null : "disabled")">
                                    <option selected="@(Model.UmbracoTemplateVersion == "" ? "selected" : null)" value="">Latest Stable</option>
                                    @foreach(var version in Model.UmbracoVersions)
                                    {
                                        <option selected="@(Model.UmbracoTemplateVersion == version ? "selected" : null)" value="@version">@version</option>
                                    }
                                </select>
                            }
                            else
                            {
                                <input asp-for="@Model.UmbracoTemplateVersion" class="form-control" disabled="@(Model.InstallUmbracoTemplate ? null : "disabled")" />                                
                            }
                        </div>
                        <div class="form-group pt-3">
                            <div class="form-check">
                                <label asp-for="@Model.IncludeStarterKit" class="form-check-label"></label>
                                <input asp-for="@Model.IncludeStarterKit" class="form-check-input" type="checkbox" />
                            </div>
                        </div>
                        <div class="form-group py-2">
                            <select class="form-control" id="StarterKitPackage" name="StarterKitPackage" disabled="@(Model.IncludeStarterKit ? null : "disabled")">
                                <option selected="@(Model.StarterKitPackage == "clean" ? "selected" : null)" value="clean">Clean Starter Kit</option>
                                <option selected="@(Model.StarterKitPackage == "Umbraco.TheStarterKit" ? "selected" : null)" value="Umbraco.TheStarterKit">The Starter Kit</option>
                                <option selected="@(Model.StarterKitPackage == "Portfolio" ? "selected" : null)" value="Portfolio">Portfolio Starter Kit</option>
                                <option selected="@(Model.StarterKitPackage == "uSkinnedSiteBuilder" ? "selected" : null)" value="uSkinnedSiteBuilder">uSkinned Site Builder</option>
                                <option selected="@(Model.StarterKitPackage == "LittleNorth.Igloo" ? "selected" : null)" value="LittleNorth.Igloo">Igloo</option>
                            </select>
                        </div>
                        <div class="form-group pt-4">
                            <div class="form-check">
                                <label asp-for="@Model.CreateSolutionFile" class="form-check-label"></label>
                                <input asp-for="@Model.CreateSolutionFile" class="form-check-input" type="checkbox" />
                            </div>
                        </div>
                        <div class="form-group py-2">
                            <label asp-for="@Model.SolutionName"></label>
                            <input asp-for="@Model.SolutionName" class="form-control" disabled="@(Model.CreateSolutionFile ? null : "disabled")" />
                        </div>
                        <div class="form-group py-2">
                            <label asp-for="@Model.ProjectName"></label>
                            <input asp-for="@Model.ProjectName" class="form-control" />
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="form-group py-2">
                            <div class="form-check">
                                <label asp-for="@Model.UseUnattendedInstall" class="form-check-label"></label>
                                <input asp-for="@Model.UseUnattendedInstall" class="form-check-input" type="checkbox" />
                            </div>
                        </div>
                        <div class="form-group py-2">
                            <label asp-for="@Model.DatabaseType"></label>
                            <select class="form-control" id="DatabaseType" name="DatabaseType" disabled="@(Model.UseUnattendedInstall ? null : "disabled")">
                                <option selected="@(Model.DatabaseType == "SQLite" ? "selected" : null)" value="SQLite">SQLite (v10+ only)</option>
                                <option selected="@(Model.DatabaseType == "LocalDb" ? "selected" : null)" value="LocalDb">LocalDb</option>
                                <option selected="@(Model.DatabaseType == "SQLServer" ? "selected" : null)" value="SQLServer">SQL Server</option>
                                <option selected="@(Model.DatabaseType == "SQLAzure" ? "selected" : null)" value="SQLAzure">SQL Azure</option>
                                <option selected="@(Model.DatabaseType == "SQLCE" ? "selected" : null)" value="SQLCE">SQLCE (v9 only)</option>
                            </select>
                        </div>
                        <div class="form-group py-2 @(Model.DatabaseType == "SQLAzure" || Model.DatabaseType == "SQLServer" ? "d-block" : "d-none")">
                            <label asp-for="@Model.ConnectionString"></label>
                            <input asp-for="@Model.ConnectionString" class="form-control" disabled="@(Model.UseUnattendedInstall ? null : "disabled")" />
                        </div>
                        <div class="form-group py-3">
                            <label asp-for="@Model.UserFriendlyName"></label>
                            <input asp-for="@Model.UserFriendlyName" class="form-control" disabled="@(Model.UseUnattendedInstall ? null : "disabled")" />
                        </div>
                        <div class="form-group py-2">
                            <label asp-for="@Model.UserEmail"></label>
                            <input asp-for="@Model.UserEmail" class="form-control" disabled="@(Model.UseUnattendedInstall ? null : "disabled")" />
                        </div>
                        <div class="form-group py-2">
                            <label asp-for="@Model.UserPassword"></label>
                            <input asp-for="@Model.UserPassword" class="form-control" disabled="@(Model.UseUnattendedInstall ? null : "disabled")" />
                        </div>
                        <div class="form-group py-2 text-right">
                            <a href="/" class="btn btn-warning" id="reset"><i class="ion-ios-arrow-start"></i> Reset to Defaults</a>
                            <button class="btn btn-primary ml-2" id="save" name="save" title="Saves current settings to your local browser storage"><i class="ion-save"></i> Save</button>
                            <button class="btn btn-danger ml-2" id="deletesave" name="deletesave" title="Deletes the saved setting from your local browser storage"><i class="ion-android-delete"></i> Delete Save</button>
                            <button class="btn btn-success ml-2" id="update" name="update"><i class="ion-checkmark-circled"></i> Update Script</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="tab-pane fade show" id="help" role="tabpanel" aria-labelledby="help-tab">
            <div class="row pt-5">
                <div class="col-12">
                    <p>You can learn how to use this tool by <a href="https://www.youtube.com/watch?v=ny5wzOSKFFA" target="_blank" rel="noopener">watching this video</a></p>
                </div>
            </div>
        </div>
        <div class="tab-pane fade show" id="source" role="tabpanel" aria-labelledby="source-tab">
            <div class="row pt-5">
                <div class="col-12">
                    <p>You can see the source code for this site on <a href="https://github.com/prjseal/Package-Script-Writer"  target="_blank" rel="noopener">GitHub</a>. </p>
                </div>
            </div>
        </div>
        <div class="tab-pane fade show" id="coffee" role="tabpanel" aria-labelledby="coffee-tab">
            <div class="row pt-5">
                <div class="col-12">
                    <p>This tool is completely free for you to use but, if you want to show your appreciation, you can <a href="https://codeshare.co.uk/coffee" target="_blank" rel="noopener">buy me a coffee</a>.</p>
                </div>
            </div>
        </div>
    </div>

}